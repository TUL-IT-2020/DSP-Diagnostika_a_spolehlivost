<HTML>
<HEAD>
<TITLE></TITLE>
   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1250"> 
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000" LINK="#0000FF" VLINK="#800080">
<P align="justify"><BIG>Porucha</BIG><BR>
Ve smyslu názvoslovné normy je <b>porucha</b> (ang. fault) jev, spoèívající v ukonèení schopnosti objektu plnit požadovanou funkci podle technických podmínek. Naproti tomu <b>chyba</b> (angl. error) je rozdíl mezi správnou a skuteènou hondnotou nìjaké velièiny, zjištìný mìøením nebo pozorováním.<BR>
Podle toho, zda pozorovaná jednotka je nebo není schopna v daném okamžiku vykonávat pøedepsanou funkci rozlišujeme dva základní stavy, a to <b>bezporuchový</b> a <b>poruchový</b>. Jako poruchový se oznaèuje stav, kdy se v dané jednotce vyskytne alespoò jedna chyba.<BR>
Rozlišení poruchového a bezporuchového stavu je jednou ze základních úloh diagnostiky, zvanou detekce poruchy. Pøi detekci poruchy tedy nejde o žádné bližší urèení poruchového stavu, o zjištìní, o jakou poruchu se jedná, ani o to, kolik poruch se v testovaném objektu vyskytuje. Výsledkem <b>detekèního testu</b> je jednobitová informace, udávající, zda je objekt v poruchovém èi bezporuchovém stavu.<BR>
<b>Lokalizací poruchy</b> rozumíme nalezení místa (s blíže nespecifikovanou pøesností), ve kterém se porucha vyskytuje. 
</P>


<P align="justify"><BIG>Poruchy typu t</BIG><BR>
Pøes znaènou mnohotvárnost fyzikálních poruch vystaèila dosud diagnostika èíslicových obvodù s pomìrnì malým poètem logických poruch. Nejznámìjší a také nejstarší jsou tzv. trvalé poruchy, oznaèované též jako poruchy typu t.  Jedná se o trvalou nulu (t0) a trvalou jednièku (t1)  (stuck-at-0, stuck-at-1). Trvalá nula je porucha, která se projevuje konstantní hodnotou "0" na urèitém vodièi. Mohli bychom si ji pøedstavit také tak, že tento vodiè pøipojíme na konstantní zdroj logické nuly. Prakticky takováto porucha mùže vzniknout napø. zkratováním vodièe na zem. Podobnì trvalá jednièka je porucha, která se projevuje konstantní hodnotou "1"‚ takže ji lze modelovat pøipojením zdroje logické jednièky do sledovaného místa. Prakticky mùže vzniknout napø. zkratováním vodièe na zdroj napájecího napìtí. Kromì toho však lze trvalou jednièkou modelovat øadu dalších poruch.<BR>
V logických obvodech vyrobených technologií TTL platí, že odpojený vstup se chová tak, jako kdyby na nìj byl pøipojen zdroj logické jednièky. Pøerušení vstupního signálního vodièe tedy lze modelovat poruchou t1 na odpojeném vstupu. Podobnì pøi pøerušení napájecího nebo zemnícího vývodu pro celé pouzdro se na všech výstupech z pouzdra ustálí logická jednièka, protože v obou pøípadech dolní tranzistor výstupní dvojice nemùže sepnout proud a zùstane otevøen.<BR> 
Tyto poruchy tedy lze modelovat poruchou t1 na výstupech všech logických èlenù pouzdra. Podrobnìjší rozbor poruchových mechanismù integrovaných obvodù TTL potvrzuje, že aèkoli se poruchy typu t pøiøazují zásadnì vodièùm, lze jimi modelovat velké množství rùzných fyzikálních poruch vèetnì poruch uvnitø logických èlenù, tedy pøímo na èipu.<BR>
Pøi popsaném zpùsobu modelování poruch pøedpokládáme, že všechny logické èleny pracují správnì, tedy že pøesnì plní funkci, kterou jim pøedepisuje pravdivostní tabulka. Porucha se projeví pouze v tom, že na tyto èleny jsou v nìkterých pøípadech pøivádìny chybné vstupní signály. 
</P>
<LI>Pøíklad chování obvodu s poruchami typu t
<P align="justify"><IMG src="poruchy.gif"><BR>
Sloupec U pøedstavuje výstup obvodu v pøípadì správné funkce. Další sloupce obsahují hodnoty výstupu U v pøípadì dané poruchy typu T.
</P>
<LI><b>Pozorujte:</b> Vektor vstupních signálù a,b detekuje ty poruchy typu t, v jejichž sloupci se pro kombinaci vstupních hodnot danou tímto vektorem liší výstupní hodnota od hodnoty U bez poruchy.<BR>
<IMG src="poruchy2.gif"  hspace="20"><BR>
Dále si všimnìte, že jeden vektor mùže pokrývat (tzn. že v pøípadì pøivedení tohoto vektoru na vstupní vodièe obvodu se výskyt tìchto poruch projeví chybnou hodnotu výstupního signálu) více poruch. A naopak porucha mùže být odhalena více rùznými vektory. 
</P>
<LI><b>Nerozlišitelné poruchy</b><BR>
<IMG src="poruchy3.gif" hspace="20"><BR>
Sloupce se stejnými hodnotami sluèují poruchy, pøi jejichž výskytu má obvod shodné chování. Takové poruchy jsou nerozlišitelné neboli ekvivalentní a neexistuje test, který je dokáže vzájemnì rozlišit.
</P>
<P align="justify"><BIG>Test</BIG><BR>
Test je posloupnost vstupních vektorù a jím pøiøazených výstupních vektorù sloužící k detekci èi lokalizaci poruchy.
Nejdùležitìjším parametrem testu je jeho <b>diagnostické pokrytí</b>. To vyjadøuje poèet poruch detekovatelných (tj. pokrytých) testem. Test, který pokrývá všechny detekovatelné poruchy, je <b>úplný</b>. Úplný test lze libovolnì rozšiøovat o další vektory, aniž by se na jeho pokrytí nìco zmìnilo, takže úplných testù pro jeden obvod je nekoneènì mnoho. Pokud naopak chceme nìkteré kroky testu vypustit, je tøeba postupovat velmi opatrnì, nechceme-li porušit úplnost testu<BR>
Úplný test, který má nejmenší délku, se nazývá <b>minimální test</b>. Je to extrémní pøípad, který je pro praxi témìø nezajímavý, protože minimalizace testu je zdlouhavá a drahá a na ní vynaložené náklady se nevyplácejí. Bìžnì tedy pracujeme s testy, které obsahují redundantní kroky.<BR>
Vyzkoušení všech možných funkcí, které má testovaný obvod realizovat, pøedstavuje opaèný extrém z hlediska délky testu a je oznaèováno jako <b>triviální test</b>. Triviální test je vždy úplný, protože detekuje všechny detekovatelné poruchy. Pro obvod s n vstupy má triviální test délku 2<sup>n</sup> a skládá se ze všech kombinací hodnot n promìnných. Pro obvody s vìtším poètem vstupù je nepoužitelný v dùsledku velmi vysokého poètu krokù. Ke generování triviálního testu staèí èítaè s n øády.</P>

<P align="justify"><BIG>Metody generování testù</BIG><BR>
Generování testù (tj. sestavení) je klíèovou úlohou diagnostiky, avšak je to též úloha nejtìžší  a lze øíci, že doposud nebyla uspokojivì vyøešena. Pøi manuálním sestavování testu se obvykle postupuje metodou zcitlivìní cesty.  Pro zdùraznìní její obtížné algoritmizovatelnosti se nìkdy oznaèuje též jako intuitivní zcitlivìní cesty. Za nejúspìšnìjší  pokus o její algoritmizaci se považuje D-algoritmus. Ten zavádí novou logickou hodnotu D, která se používá pro vyznaèení citlivé cesty v obvodu. Pro manipulaci se symbolem D byla odvozena pøesná a jednoduchá pravidla, která lze snadno zapsat programem. D-algoritmus si získal znaènou popularitu, ale brzy se také odhalily jeho slabiny. Pøedevším operace konzistence byla vylepšena v metodách odvozených z D-algoritmu, kterými jsou PODEM a FAN.<BR>
Z metodického hlediska je nejdùležitìjší, zda jsou testy generovány jako strukturní nebo jako funkèní. Pøi sestavování funkèních testù vycházíme pouze z popisu funkce testované jednotky, takže podrobná znalost není nutná. Je tøeba vytvoøit model poruch chování na stejné úrovni, na jaké je popsána funkce, protože bez znalosti struktury nelze vycházet z modelu fyzikálních poruch. Funkèní testy se používají tam, kde neznáme skuteènou strukturu testované jednotky, což platí èasto napø. o obvodech LSI a VLSI. 
</P>


</BODY>
</HTML>
